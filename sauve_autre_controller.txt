<?php

namespace App\Controller;

use App\Entity\CtAutre;
use App\Form\CtAutreType;
use App\Repository\CtAutreRepository;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

#[Route('/ct_autre')]
class CtAutreController extends AbstractController
{
    #[Route('/', name: 'app_ct_autre_index', methods: ['GET'])]
    public function index(CtAutreRepository $ctAutreRepository): Response
    {
        return $this->render('ct_autre/index.html.twig', [
            'ct_autres' => $ctAutreRepository->findAll(),
        ]);
    }

    #[Route('/new', name: 'app_ct_autre_new', methods: ['GET', 'POST'])]
    public function new(Request $request, EntityManagerInterface $entityManager): Response
    {
        $ctAutre = new CtAutre();
        $form = $this->createForm(CtAutreType::class, $ctAutre);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $entityManager->persist($ctAutre);
            $entityManager->flush();

            return $this->redirectToRoute('app_ct_autre_index', [], Response::HTTP_SEE_OTHER);
        }

        return $this->renderForm('ct_autre/new.html.twig', [
            'ct_autre' => $ctAutre,
            'form' => $form,
        ]);
    }

    #[Route('/{id}', name: 'app_ct_autre_show', methods: ['GET'])]
    public function show(CtAutre $ctAutre): Response
    {
        return $this->render('ct_autre/show.html.twig', [
            'ct_autre' => $ctAutre,
        ]);
    }

    #[Route('/{id}/edit', name: 'app_ct_autre_edit', methods: ['GET', 'POST'])]
    public function edit(Request $request, CtAutre $ctAutre, EntityManagerInterface $entityManager): Response
    {
        $form = $this->createForm(CtAutreType::class, $ctAutre);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $entityManager->flush();

            return $this->redirectToRoute('app_ct_autre_index', [], Response::HTTP_SEE_OTHER);
        }

        return $this->renderForm('ct_autre/edit.html.twig', [
            'ct_autre' => $ctAutre,
            'form' => $form,
        ]);
    }

    #[Route('/{id}', name: 'app_ct_autre_delete', methods: ['POST'])]
    public function delete(Request $request, CtAutre $ctAutre, EntityManagerInterface $entityManager): Response
    {
        if ($this->isCsrfTokenValid('delete'.$ctAutre->getId(), $request->request->get('_token'))) {
            $entityManager->remove($ctAutre);
            $entityManager->flush();
        }

        return $this->redirectToRoute('app_ct_autre_index', [], Response::HTTP_SEE_OTHER);
    }
}
